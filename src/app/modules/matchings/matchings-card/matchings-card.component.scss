@import "mixins";

$item-background: rgba(var(--tertiary-color-rgb), 0.3);
$item-hover-background: rgba(var(--tertiary-color-rgb), 0.5);

$connector-width: 7px;

$easeIn-duration: 400ms;

#game {
  margin-top: 20px;

  .round-label {
    margin-bottom: 0;

    @include to-md {
      font-size: 1em;
    }
  }

  .container {
    display: flex;
    width: fit-content;
    margin: auto;
    position: relative;
  }

  @keyframes easeIn {
    0% {
      margin: 0;
      background: limegreen;
      box-shadow: 0 0 2px rgba(limegreen, 0.6), 0 0 10px rgba(limegreen, 0.3);
    }
    100% {
      margin: 10px;
      background: rgba(var(--tertiary-color-rgb), 0.5);
      box-shadow: none;
    }
  }

  #horizontal-connector {
    background: rgba(var(--tertiary-color-rgb), 0.8);
  }
  .vertical-connector {
    background: rgba(var(--tertiary-color-rgb), 0.3);
  }

  #horizontal-connector,
  .vertical-connector {
    transition: all $easeIn-duration ease;
  }

  .connector-container {
    #horizontal-connector {
      margin: 0 10px;
      height: 2px;
      width: 50px;
    }
  }

  .vertical-connector {
    width: 2px;
    position: absolute;
    left: 50%;
    top: 60px;
    bottom: -20px;

    @include to-xs {
      top: 51px;
    }
  }

  &.game-started .connector-container #horizontal-connector {
    animation: $easeIn-duration ease-out 0s easeIn;
  }

  .connector-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100px;

    @include from-xs {
      margin: 10px 0;
    }
  }

  .match-pair-side {
    display: flex;
    flex-direction: column;
    transition: all 500ms ease;

    @include from-xs {
      padding: 10px;
    }

    &.left,
    &.right {
      display: flex;
    }

    &.left {
      padding-right: 0;

      button.match-card {
        position: relative;
      }
    }

    &.right {
      padding-left: 0;

      button.match-card {
        flex-direction: row-reverse;
      }
    }

    .cdk-drag-placeholder {
      opacity: 0;
    }
  }

  hr {
    height: 1px;
    margin: 20px 0;
  }

  h2 {
    color: var(--grey-2);
    text-align: center;
    letter-spacing: 2px;
  }

  button.match-card {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100px;
    border: none;
    border-radius: var(--border-radius);
    background: var(--tertiary-color);
    cursor: pointer;
    outline: none;
    color: var(--background-primary);
    transition: box-shadow 300ms ease, transform 100ms ease-in-out;

    @include from-xs {
      width: 220px;
    }

    @include to-xs {
      font-size: 0.7em;
      padding: 8px;
      width: 100px;
      height: 80px;

      hyphens: auto;
      -webkit-hyphens: auto;
      -moz-hyphens: auto;
      -ms-hyphens: auto;
    }

    &:not(:disabled) {
      &:hover {
        transform: translateY(-1px);
        box-shadow: var(--button-shadow);
        transition: box-shadow 300ms ease, transform 100ms ease-in-out;

        & + .left-connector,
        & + .connector-wrapper .right-connector:not(.center-bar) {
          background: $item-hover-background;
        }
      }

      &:active {
        transform: translateY(1px);
        box-shadow: var(--box-shadow);
        transition: box-shadow 300ms ease, transform 100ms ease-in-out;
      }
    }
  }

  .connector-wrapper {
    display: flex;
    flex-direction: column;

    .left-connector {
      height: 25px;
      width: $connector-width;
      background: $item-background;
    }

    .right-connector {
      width: $connector-width;

      &.top-bar {
        background: $item-background;
        flex: 1;
      }

      &.center-bar {
        height: 25px;
      }

      &.bottom-bar {
        background: $item-background;
        flex: 1;
      }
    }
  }

  .fe-text-button {
    display: flex;
    margin: 20px auto auto;

    border: 1px solid rgba(var(--tertiary-color-rgb), 0.3);
    border-radius: 0;

    &:hover {
      transform: none;
    }
  }

  .finish-label {
    text-align: center;
    margin: 50px 0;
  }
}

#game button.match-card,
.cdk-drag-preview {
  padding: 10px;
}

.cdk-drop-list-dragging .cdk-drag-preview {
  opacity: 1;
}

.cdk-drag-preview {
  color: var(--background-primary);
  background: var(--tertiary-color);
  border: none;
  box-shadow: var(--button-shadow);

  @include to-xs {
    font-size: 0.7em;
    hyphens: auto;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
  }
}

#game {
  button.match-card:not(:last-of-type),
  .connector-container .connector-wrapper:not(:last-of-type) {
    margin-bottom: 10px;
  }
}

#game {
  &.correct,
  &.wrong {
    transition: all $easeIn-duration ease-out;

    .match-pair-side {
      &.left {
        padding-right: 0;
        margin-right: 0;
      }

      &.right {
        padding-left: 0;
        margin-left: 0;
      }
    }

    #horizontal-connector {
      margin: 0 !important;
    }
  }

  &.correct,
  &.wrong {
    button.fe-text-button span,
    button.fe-text-button:disabled span {
      color: var(--tertiary-color);
    }
  }

  &.correct {
    #horizontal-connector,
    .vertical-connector {
      background: limegreen;
      box-shadow: 0 0 2px rgba(50, 205, 50, 0.8),
        0 0 10px rgba(50, 205, 50, 0.4);
    }
  }

  &.wrong {
    #horizontal-connector,
    .vertical-connector {
      background: red;
      box-shadow: 0 0 2px rgba(255, 0, 0, 0.8), 0 0 10px rgba(255, 0, 0, 0.4);
    }
  }
}

#game .container .slide-in-left {
  @include matchingMoveInLeftAnimation;
}

#game .container .slide-in-right {
  @include matchingMoveInRightAnimation;
}
