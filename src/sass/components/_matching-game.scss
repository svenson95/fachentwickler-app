$item-background: rgba(var(--tertiary-color-rgb), .3);
$item-hover-background: rgba(var(--tertiary-color-rgb), .5);

$connector-width: 7px;

$easeIn-duration: 400ms;

#game {
  margin-top: 20px;

  .round-label {
    margin-bottom: 0;

    @include to-md {
      font-size: 1em;
    }
  }

  .container {
    display: flex;
    width: fit-content;
    margin: auto;
    position: relative;
  }

  @keyframes easeIn {
    0% {
      margin: 0;
      background: limegreen;
      box-shadow:
          0 0 2px rgba(limegreen, .6),
          0 0 10px rgba(limegreen, .3);
    }
    100% {
      margin: 10px;
      background: rgba(var(--tertiary-color-rgb), .5);
      box-shadow: none;
    }
  }

  #horizontal-connector { background: rgba(var(--tertiary-color-rgb), .8); }
  .vertical-connector { background: rgba(var(--tertiary-color-rgb), .3); }

  #horizontal-connector,
  .vertical-connector {
    transition: all $easeIn-duration ease;
  }

  .connector-container {
    #horizontal-connector {
      margin: 0 10px;
      height: 2px;
      width: 50px;
    }
  }

  .vertical-connector {
    width: 2px;
    position: absolute;
    left: 50%;
    top: 60px;
    bottom: -20px;

    @include to-xs {
      top: 51px;
    }
  }

  &.game-started .connector-container #horizontal-connector {
    animation: $easeIn-duration ease-out 0s easeIn;
  }

  .connector-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100px;

    @include from-xs {
      margin: 10px 0;
    }
  }

  .pair_items {
    display: flex;
    flex-direction: column;
    transition: all 500ms ease;

    @include from-xs {
      padding: 10px;
    }

    &.left, &.right {
      display: flex;
    }

    &.left {
      padding-right: 0;

      .btn-wrapper {
        position: relative;
      }
    }

    &.right {
      padding-left: 0;

      .btn-wrapper {
        flex-direction: row-reverse;
      }
    }

    .cdk-drag-placeholder {
      opacity: 0;
    }

    /* Animate an item that has been dropped. */
    .cdk-drag-animating {
      transition: transform 300ms cubic-bezier(0, 0, 0.2, 1);
    }
  }

  hr {
    height: 1px;
    margin: 20px 0;
  }

  h2 {
    color: var(--grey-2);
    text-align: center;
    letter-spacing: 2px;
    font-family: Nunito-Light, sans-serif;
  }

  .btn-wrapper {
    display: flex;
    align-items: center;

    .left-connector {
      height: 25px;
      width: $connector-width;
      background: $item-background;
    }

    .connector-wrapper {
      display: flex;
      flex-direction: column;
      height: 100%;

      .right-connector {
        width: $connector-width;

        &.top-bar {
          background: $item-background;
          flex: 1;
        }

        &.center-bar {
          height: 25px;
        }

        &.bottom-bar {
          background: $item-background;
          flex: 1;
        }
      }
    }
  }

  .item {
    justify-content: center;
    min-height: 100px;
    padding: 10px;
    border: none;
    background: $item-background;
    cursor: pointer;
    outline: none;
    color: var(--text-color-1);

    @include from-xs {
      width: 220px;
    }

    @include to-xs {
      font-size: .7em;
      padding: 8px;
      width: 100px;
      height: 80px;

      hyphens: auto;
      -webkit-hyphens: auto;
      -moz-hyphens: auto;
      -ms-hyphens: auto;
    }

    &:disabled {
      color: var(--text-color-1);
    }

    &:not(:disabled) {
      &:hover, &:active {
        background: $item-hover-background;

        & + .left-connector,
        & + .connector-wrapper .right-connector:not(.center-bar) {
          background: $item-hover-background;
        }
      }
    }
  }

  .fe-text-button {
    display: flex;
    margin: 20px auto auto;

    border: 1px solid rgba(var(--tertiary-color-rgb),.3);
    border-radius: 0;

    &:hover {
      transform: none;
    }
  }

  .finish-label {
    text-align: center;
    margin: 50px 0;
  }
}

.cdk-drag-preview {
  background: $item-background;
  border: none;
  box-shadow: var(--button-shadow);

  @include to-xs {
    font-size: .7em;
    hyphens: auto;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
  }
}

#game {
  .btn-wrapper:not(:last-of-type),
  .connector-container .connector-wrapper:not(:last-of-type) {
    margin-bottom: 10px;
  }
}

#game {
  &.correct, &.wrong {
    transition: all $easeIn-duration ease-out;

    .pair_items {
      &.left {
        padding-right: 0;
        margin-right: 0;
      }

      &.right {
        padding-left: 0;
        margin-left: 0;
      }
    }

    #horizontal-connector {
      margin: 0 !important;
    }
  }

  &.correct {
    #horizontal-connector,
    .vertical-connector {
      background: limegreen;
      box-shadow:
          0 0 2px rgba(50,205,50, .8),
          0 0 10px rgba(50,205,50, .4);
    }

    .fe-text-button {
      background-color: rgba(50, 205, 50, .6);
      span {
        color: var(--text-color-1);
      }
    }
  }

  &.wrong {
    #horizontal-connector,
    .vertical-connector {
      background: red;
      box-shadow:
          0 0 2px rgba(255,0,0, .8),
          0 0 10px rgba(255,0,0, .4);
    }

    .fe-text-button {
      background-color: rgba(255, 0, 0, .6);
      span {
        color: var(--text-color-1);
      }
    }
  }
}

.fe-matching .container .slide-in-left {
  @include moveInLeftAnimation_matching;
}

.fe-matching .container .slide-in-right {
  @include moveInRightAnimation_matching;
}
